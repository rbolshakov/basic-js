основы алгоритмов

сложность алгоритма, алгоритмы поиска данных


кодеры и программисты 
кодерам - главная цель, сделать проект (запустился проект замечательно - ищут инфу в инете внедряют в проект и слава богу)

программисты - главная цель, понять код который используется и внедрять его с пониманием в проект. Оптимально ли применение этого когда для текущей задачи. 

формы записи алгоритмов - блок схема
 кружок - ромбик - парралелограмм - прямоугольник
 
 
 
варианты вывода - 
алерт 
документ врайт
консоль лог

вариант ввода - 
промпт 


типы данных 


number 


+ перед prompt = преоборазование строки к числу

parseFloat перед prompt = тоже самое что и + перед
parseInt = Функция parseInt() принимает строку в качестве аргумента и возвращает целое число в соответствии с указанным основанием системы счисления



string 


логический тип данных booliet 

true + false

var year = +prompt("Year");

var x = 10 % 3; (оператор % выводит остаток от деления). 

!перед знаком - означает что "НЕ" не равно либо не меньше и т.д. 

если первое число в уровнении меньше чем число после оператора %, то выводится первое число


арифметические операторы 

var x = 10;

х++; постфиксная форма инкремента 
++х; префиксная форма инкремента
х = х + 1; 
х += 1;


постфиксная форма инкремента


var a = 10;
var b = a++;

console.log('a='+a+'\n');


префиксная форма инкремента


var a = 10;
var b = ++a;

console.log('a='+a+'\n');



логические операторы 

&& - and объединение нескольких условий
|| - or или (либо либо)
! - not отрицание
^^ - xor непонятно как объяснить



